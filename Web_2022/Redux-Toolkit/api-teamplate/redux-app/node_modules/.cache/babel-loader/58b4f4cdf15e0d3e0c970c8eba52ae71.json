{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { addUser } from '../../redux/userSlice';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = props => {\n  _s();\n\n  const [state, setState] = useState('');\n  const [name, setName] = useState(' ');\n  const [email, setEmail] = useState(' ');\n  const ref = useRef(null);\n\n  function UpdateState() {\n    // update init value of input\n    const inputValue = ref.current.value; // change State to new value\n\n    setState(inputValue); // to get new value of input and make chage on props.setName with new value\n\n    props.setName(inputValue);\n  }\n\n  const handleSubmit = e => {\n    e.preventDefulte();\n    addUser(name, email);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"s\"\n  }, void 0, false) // <form className='form' onSubmit={handleSubmit}>\n  //   <div className='form-groub'>\n  //     <input\n  //       ref={ref}\n  //       value={state}\n  //       type='text'\n  //       placeholder='enter name'\n  //       // this modern method to update valeu of props\n  //       onChange={() => UpdateState()}\n  //     />\n  //   </div>\n  //   <div className='form-groub'>\n  //     <input\n  //       type='text'\n  //       placeholder='enter email'\n  //       // this another method to show data acrross the props\n  //       onChange={(e) => props.setEmail(e.target.value)}\n  //     />\n  //   </div>\n  //   <div className='form-groub'>\n  //     <input type='submit' placeholder='add user' />\n  //   </div>\n  //   <p>\n  //     your email:\n  //     {/* if isChanged === treu !? show the email  */}\n  //     <span> {}</span>\n  //   </p>\n  // </form>\n  ;\n};\n\n_s(Form, \"+wXg+Ri1Wp4lVXc9dkC1YSlP/BI=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/media/marwanhero/HDD-STORE/Templates/My-Project/Web_2022/Redux-Toolkit/src/components/Form/form.js"],"names":["React","useRef","useState","addUser","Form","props","state","setState","name","setName","email","setEmail","ref","UpdateState","inputValue","current","value","handleSubmit","e","preventDefulte"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,OAAT,QAAwB,uBAAxB;;;;AACA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,GAAD,CAAhC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,GAAD,CAAlC;AACA,QAAMU,GAAG,GAAGX,MAAM,CAAC,IAAD,CAAlB;;AACA,WAASY,WAAT,GAAuB;AACrB;AACA,UAAMC,UAAU,GAAGF,GAAG,CAACG,OAAJ,CAAYC,KAA/B,CAFqB,CAGrB;;AACAT,IAAAA,QAAQ,CAACO,UAAD,CAAR,CAJqB,CAKrB;;AACAT,IAAAA,KAAK,CAACI,OAAN,CAAcK,UAAd;AACD;;AACD,QAAMG,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAhB,IAAAA,OAAO,CAACK,IAAD,EAAOE,KAAP,CAAP;AACD,GAHD;;AAIA,sBACE;AAAA;AAAA,mBADF,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BF;AA+BD,CAhDD;;GAAMN,I;;KAAAA,I;AAkDN,eAAeA,IAAf","sourcesContent":["import React, { useRef, useState } from 'react'\nimport { addUser } from '../../redux/userSlice'\nconst Form = (props) => {\n  const [state, setState] = useState('')\n  const [name, setName] = useState(' ')\n  const [email, setEmail] = useState(' ')\n  const ref = useRef(null)\n  function UpdateState() {\n    // update init value of input\n    const inputValue = ref.current.value\n    // change State to new value\n    setState(inputValue)\n    // to get new value of input and make chage on props.setName with new value\n    props.setName(inputValue)\n  }\n  const handleSubmit = (e) => {\n    e.preventDefulte()\n    addUser(name, email)\n  }\n  return (\n    <>s</>\n    // <form className='form' onSubmit={handleSubmit}>\n    //   <div className='form-groub'>\n    //     <input\n    //       ref={ref}\n    //       value={state}\n    //       type='text'\n    //       placeholder='enter name'\n    //       // this modern method to update valeu of props\n    //       onChange={() => UpdateState()}\n    //     />\n    //   </div>\n    //   <div className='form-groub'>\n    //     <input\n    //       type='text'\n    //       placeholder='enter email'\n    //       // this another method to show data acrross the props\n    //       onChange={(e) => props.setEmail(e.target.value)}\n    //     />\n    //   </div>\n    //   <div className='form-groub'>\n    //     <input type='submit' placeholder='add user' />\n    //   </div>\n    //   <p>\n    //     your email:\n    //     {/* if isChanged === treu !? show the email  */}\n    //     <span> {}</span>\n    //   </p>\n    // </form>\n  )\n}\n\nexport default Form\n"]},"metadata":{},"sourceType":"module"}