{"ast":null,"code":"var _jsxFileName = \"/media/marwanhero/HDD-STORE/Templates/My-Project/Web_2022/Redux-Toolkit/src/components/Form/form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = props => {\n  _s();\n\n  // const [state, setState] = useState('')\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('...');\n  const ref = useRef(null); // function UpdateState() {\n  //   // update init value of input\n  //   const inputValue = ref.current.value\n  //   // change State to new value\n  //   setState(inputValue)\n  //   // to get new value of input and make chage on props.setName with new value\n  //   props.setName(inputValue)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    onSubmit: props.Submit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-groub\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: ref // value={state}\n        ,\n        type: \"text\",\n        placeholder: \"enter name\" // this modern method to update valeu of props\n        // onChange={() => UpdateState()}\n        ,\n        onChange: e => props.setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-groub\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"enter email\" // this another method to show data acrross the props\n        ,\n        onChange: e => props.setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-groub\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        placeholder: \"add user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"your email:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", props.isChanged && props.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"0GuHQaeVthExIBldtlXvp9m25M8=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/media/marwanhero/HDD-STORE/Templates/My-Project/Web_2022/Redux-Toolkit/src/components/Form/form.js"],"names":["React","useRef","useState","Form","props","name","setName","email","setEmail","ref","Submit","e","target","value","isChanged"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;;;AACA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAMO,GAAG,GAAGR,MAAM,CAAC,IAAD,CAAlB,CAJsB,CAKtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAEG,KAAK,CAACM,MAAvC;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AACE,QAAA,GAAG,EAAED,GADP,CAEE;AAFF;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,WAAW,EAAC,YAJd,CAKE;AACA;AANF;AAOE,QAAA,QAAQ,EAAGE,CAAD,IAAOP,KAAK,CAACE,OAAN,CAAcK,CAAC,CAACC,MAAF,CAASC,KAAvB;AAPnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,aAFd,CAGE;AAHF;AAIE,QAAA,QAAQ,EAAGF,CAAD,IAAOP,KAAK,CAACI,QAAN,CAAeG,CAAC,CAACC,MAAF,CAASC,KAAxB;AAJnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF,eAoBE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,WAAW,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YApBF,eAuBE;AAAA,6CAGE;AAAA,wBAAQT,KAAK,CAACU,SAAN,IAAmBV,KAAK,CAACG,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CA7CD;;GAAMJ,I;;KAAAA,I;AA+CN,eAAeA,IAAf","sourcesContent":["import React, { useRef, useState } from 'react'\nconst Form = (props) => {\n  // const [state, setState] = useState('')\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('...')\n  const ref = useRef(null)\n  // function UpdateState() {\n  //   // update init value of input\n  //   const inputValue = ref.current.value\n  //   // change State to new value\n  //   setState(inputValue)\n  //   // to get new value of input and make chage on props.setName with new value\n  //   props.setName(inputValue)\n  // }\n\n  return (\n    <form className='form' onSubmit={props.Submit}>\n      <div className='form-groub'>\n        <input\n          ref={ref}\n          // value={state}\n          type='text'\n          placeholder='enter name'\n          // this modern method to update valeu of props\n          // onChange={() => UpdateState()}\n          onChange={(e) => props.setName(e.target.value)}\n        />\n      </div>\n      <div className='form-groub'>\n        <input\n          type='text'\n          placeholder='enter email'\n          // this another method to show data acrross the props\n          onChange={(e) => props.setEmail(e.target.value)}\n        />\n      </div>\n      <div className='form-groub'>\n        <input type='submit' placeholder='add user' />\n      </div>\n      <p>\n        your email:\n        {/* if isChanged === treu !? show the email  */}\n        <span> {props.isChanged && props.email}</span>\n      </p>\n    </form>\n  )\n}\n\nexport default Form\n"]},"metadata":{},"sourceType":"module"}