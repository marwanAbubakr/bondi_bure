{"ast":null,"code":"var _jsxFileName = \"/media/marwanhero/HDD-STORE/Templates/My-Project/Web_2022/Redux-Toolkit/src/components/Form/form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addUser } from '../../redux/userSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const dispatch = useDispatch();\n  const [state, setState] = useState('');\n  const ref = useRef(null);\n\n  function UpdateState() {\n    // update init value of input\n    const inputValue = ref.current.value; // change State to new value\n\n    setState(inputValue);\n    setName(name);\n    console.log(name); // to get new value of input and make chage on props.setName with new value\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addUser({\n      name,\n      email\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-groub\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: ref,\n        value: state,\n        type: \"text\",\n        placeholder: \"enter name\" // this modern method to update valeu of props\n        ,\n        onChange: () => UpdateState() // onChange={(e) => setName(e.target.value)}\n        // onClick={ }\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-groub\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"enter email\" // this another method to show data acrross the props\n        ,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-groub\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        placeholder: \"add user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"your email:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"mpX/Ofl6x/9jV0G0CYEc4sX1w5A=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/media/marwanhero/HDD-STORE/Templates/My-Project/Web_2022/Redux-Toolkit/src/components/Form/form.js"],"names":["React","useRef","useState","useDispatch","addUser","Form","name","setName","email","setEmail","dispatch","state","setState","ref","UpdateState","inputValue","current","value","console","log","handleSubmit","e","preventDefault","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,uBAAxB;;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMQ,QAAQ,GAAGP,WAAW,EAA5B;AAEA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMW,GAAG,GAAGZ,MAAM,CAAC,IAAD,CAAlB;;AACA,WAASa,WAAT,GAAuB;AACrB;AACA,UAAMC,UAAU,GAAGF,GAAG,CAACG,OAAJ,CAAYC,KAA/B,CAFqB,CAGrB;;AACAL,IAAAA,QAAQ,CAACG,UAAD,CAAR;AACAR,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ,EANqB,CAOrB;AACD;;AAED,QAAMc,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAZ,IAAAA,QAAQ,CAACN,OAAO,CAAC;AAAEE,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAAD,CAAR,CAAR;AACD,GAHD;;AAIA,sBACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAEY,YAAjC;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AACE,QAAA,GAAG,EAAEP,GADP;AAEE,QAAA,KAAK,EAAEF,KAFT;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,WAAW,EAAC,YAJd,CAKE;AALF;AAME,QAAA,QAAQ,EAAE,MAAMG,WAAW,EAN7B,CAOE;AACA;;AARF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,aAFd,CAGE;AAHF;AAIE,QAAA,QAAQ,EAAGO,CAAD,IAAOZ,QAAQ,CAACY,CAAC,CAACE,MAAF,CAASN,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAbF,eAqBE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,WAAW,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YArBF,eAwBE;AAAA,6CAGE;AAAA,wBAAQT,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CArDD;;GAAMH,I;UAGaF,W;;;KAHbE,I;AAuDN,eAAeA,IAAf","sourcesContent":["import React, { useRef, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { addUser } from '../../redux/userSlice'\nconst Form = () => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const dispatch = useDispatch()\n\n  const [state, setState] = useState('')\n  const ref = useRef(null)\n  function UpdateState() {\n    // update init value of input\n    const inputValue = ref.current.value\n    // change State to new value\n    setState(inputValue)\n    setName(name)\n    console.log(name)\n    // to get new value of input and make chage on props.setName with new value\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    dispatch(addUser({ name, email }))\n  }\n  return (\n    <form className='form' onSubmit={handleSubmit}>\n      <div className='form-groub'>\n        <input\n          ref={ref}\n          value={state}\n          type='text'\n          placeholder='enter name'\n          // this modern method to update valeu of props\n          onChange={() => UpdateState()}\n          // onChange={(e) => setName(e.target.value)}\n          // onClick={ }\n        />\n      </div>\n      <div className='form-groub'>\n        <input\n          type='text'\n          placeholder='enter email'\n          // this another method to show data acrross the props\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </div>\n      <div className='form-groub'>\n        <input type='submit' placeholder='add user' />\n      </div>\n      <p>\n        your email:\n        {/* if isChanged === treu !? show the email  */}\n        <span> {email}</span>\n      </p>\n    </form>\n  )\n}\n\nexport default Form\n"]},"metadata":{},"sourceType":"module"}