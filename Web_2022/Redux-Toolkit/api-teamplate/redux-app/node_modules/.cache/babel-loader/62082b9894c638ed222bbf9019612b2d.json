{"ast":null,"code":"var _jsxFileName = \"/media/marwanhero/HDD-STORE/Templates/My-Project/Web_2022/Redux-Toolkit/src/components/Form/form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { addUser } from '../../redux/userSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  // const [state, setState] = useState('')\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('...'); // const ref = useRef(null)\n  // function UpdateState() {\n  //   // update init value of input\n  //   const inputValue = ref.current.value\n  //   // change State to new value\n  //   setState(inputValue)\n  //   // to get new value of input and make chage on props.setName with new value\n  //   props.setName(inputValue)\n  // }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addUser(name, email);\n    console.log('clicked');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-groub\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        // ref={ref}\n        // value={state}\n        type: \"text\",\n        placeholder: \"enter name\" // this modern method to update valeu of props\n        // onChange={() => UpdateState()}\n        ,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-groub\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"enter email\" // this another method to show data acrross the props\n        ,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-groub\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        placeholder: \"add user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"your email:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"vy+zx0JOZSi47gfAe7+A9IIT3pg=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/media/marwanhero/HDD-STORE/Templates/My-Project/Web_2022/Redux-Toolkit/src/components/Form/form.js"],"names":["React","useRef","useState","addUser","Form","name","setName","email","setEmail","handleSubmit","e","preventDefault","console","log","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,OAAT,QAAwB,uBAAxB;;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,KAAD,CAAlC,CAHiB,CAIjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMO,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAR,IAAAA,OAAO,CAACE,IAAD,EAAOE,KAAP,CAAP;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,GAJD;;AAKA,sBACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAEJ,YAAjC;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AACE;AACA;AACA,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,WAAW,EAAC,YAJd,CAKE;AACA;AANF;AAOE,QAAA,QAAQ,EAAGC,CAAD,IAAOJ,OAAO,CAACI,CAAC,CAACI,MAAF,CAASC,KAAV;AAP1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,aAFd,CAGE;AAHF;AAIE,QAAA,QAAQ,EAAGL,CAAD,IAAOF,QAAQ,CAACE,CAAC,CAACI,MAAF,CAASC,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF,eAoBE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,WAAW,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YApBF,eAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAjDD;;GAAMX,I;;KAAAA,I;AAmDN,eAAeA,IAAf","sourcesContent":["import React, { useRef, useState } from 'react'\nimport { addUser } from '../../redux/userSlice'\nconst Form = () => {\n  // const [state, setState] = useState('')\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('...')\n  // const ref = useRef(null)\n  // function UpdateState() {\n  //   // update init value of input\n  //   const inputValue = ref.current.value\n  //   // change State to new value\n  //   setState(inputValue)\n  //   // to get new value of input and make chage on props.setName with new value\n  //   props.setName(inputValue)\n  // }\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    addUser(name, email)\n    console.log('clicked')\n  }\n  return (\n    <form className='form' onSubmit={handleSubmit}>\n      <div className='form-groub'>\n        <input\n          // ref={ref}\n          // value={state}\n          type='text'\n          placeholder='enter name'\n          // this modern method to update valeu of props\n          // onChange={() => UpdateState()}\n          onChange={(e) => setName(e.target.value)}\n        />\n      </div>\n      <div className='form-groub'>\n        <input\n          type='text'\n          placeholder='enter email'\n          // this another method to show data acrross the props\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </div>\n      <div className='form-groub'>\n        <input type='submit' placeholder='add user' />\n      </div>\n      <p>\n        your email:\n        {/* if isChanged === treu !? show the email  */}\n        {/* <span> {email}</span> */}\n      </p>\n    </form>\n  )\n}\n\nexport default Form\n"]},"metadata":{},"sourceType":"module"}